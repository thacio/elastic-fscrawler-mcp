---
version: "2.2"

services:
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    user: "0"
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        elif [ x${KIBANA_PASSWORD} == x ]; then
          echo "Set the KIBANA_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        if [ ! -f certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: elasticsearch\n"\
          "    dns:\n"\
          "      - elasticsearch\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        find . -type d -exec chmod 750 \{\} \;;
        find . -type f -exec chmod 640 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://elasticsearch:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u elastic:${ELASTIC_PASSWORD} -H "Content-Type: application/json" https://elasticsearch:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "All done!";
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/elasticsearch/elasticsearch.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  elasticsearch:
    depends_on:
      setup:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=elasticsearch
      - cluster.name=${CLUSTER_NAME}
      - cluster.initial_master_nodes=elasticsearch
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/elasticsearch/elasticsearch.key
      - xpack.security.http.ssl.certificate=certs/elasticsearch/elasticsearch.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.http.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/elasticsearch/elasticsearch.key
      - xpack.security.transport.ssl.certificate=certs/elasticsearch/elasticsearch.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=${LICENSE}
      # ML Configuration for E5 and other models
      - xpack.ml.enabled=true
      - xpack.ml.max_machine_memory_percent=50
      - xpack.ml.max_model_memory_limit=10gb
      - xpack.ml.use_auto_machine_memory_percent=false
      # JVM heap size (should be ~50% of container memory)
      - "ES_JAVA_OPTS=-Xms10g -Xmx10g"
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
      # Kibana optimization for ML interface
      - "NODE_OPTIONS=--max-old-space-size=4096"
    mem_limit: 8gb
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  # E5 Model Setup
  e5-setup:
    image: curlimages/curl:latest
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    command: >
      sh -c '
        echo "Waiting for Elasticsearch to be fully ready..."
        sleep 30
        
        echo "Creating E5 inference endpoint..."
        curl -k -u elastic:${ELASTIC_PASSWORD} -X PUT "https://elasticsearch:9200/_inference/text_embedding/my-e5-model" \
          -H "Content-Type: application/json" \
          -d "{
            \"service\": \"elasticsearch\",
            \"service_settings\": {
              \"num_allocations\": 1,
              \"num_threads\": 1,
              \"model_id\": \".multilingual-e5-small\"
            }
          }" || echo "E5 endpoint may already exist"
        
        echo "Waiting for E5 model to be ready..."
        sleep 60
        
        echo "Creating semantic documents index..."
        curl -k -u elastic:${ELASTIC_PASSWORD} -X PUT "https://elasticsearch:9200/semantic_documents" \
          -H "Content-Type: application/json" \
          -d "{
            \"mappings\": {
              \"properties\": {
                \"title\": {
                  \"type\": \"text\"
                },
                \"content\": {
                  \"type\": \"text\"
                },
                \"content_semantic\": {
                  \"type\": \"semantic_text\",
                  \"inference_id\": \"my-e5-model\"
                },
                \"author\": {
                  \"type\": \"keyword\"
                },
                \"created_date\": {
                  \"type\": \"date\"
                },
                \"tags\": {
                  \"type\": \"keyword\"
                }
              }
            }
          }" || echo "Semantic index may already exist"
        
        echo "Indexing sample documents..."
        curl -k -u elastic:${ELASTIC_PASSWORD} -X POST "https://elasticsearch:9200/semantic_documents/_doc/1" \
          -H "Content-Type: application/json" \
          -d "{
            \"title\": \"Machine Learning in Healthcare\",
            \"content\": \"Artificial intelligence and machine learning are revolutionizing healthcare by enabling predictive diagnostics, personalized treatment plans, and automated medical image analysis. Deep learning algorithms can detect diseases earlier than traditional methods.\",
            \"content_semantic\": \"Artificial intelligence and machine learning are revolutionizing healthcare by enabling predictive diagnostics, personalized treatment plans, and automated medical image analysis. Deep learning algorithms can detect diseases earlier than traditional methods.\",
            \"author\": \"Dr. Smith\",
            \"created_date\": \"2025-07-02\",
            \"tags\": [\"healthcare\", \"AI\", \"machine learning\", \"diagnostics\"]
          }" || echo "Sample document 1 may already exist"
        
        curl -k -u elastic:${ELASTIC_PASSWORD} -X POST "https://elasticsearch:9200/semantic_documents/_doc/2" \
          -H "Content-Type: application/json" \
          -d "{
            \"title\": \"Financial Technology Innovation\",
            \"content\": \"Blockchain technology and cryptocurrency are transforming the financial sector. Digital payments, smart contracts, and decentralized finance (DeFi) offer new opportunities for investment and banking services.\",
            \"content_semantic\": \"Blockchain technology and cryptocurrency are transforming the financial sector. Digital payments, smart contracts, and decentralized finance (DeFi) offer new opportunities for investment and banking services.\",
            \"author\": \"Financial Analyst\",
            \"created_date\": \"2025-07-02\",
            \"tags\": [\"fintech\", \"blockchain\", \"cryptocurrency\", \"banking\"]
          }" || echo "Sample document 2 may already exist"
        
        curl -k -u elastic:${ELASTIC_PASSWORD} -X POST "https://elasticsearch:9200/semantic_documents/_doc/3" \
          -H "Content-Type: application/json" \
          -d "{
            \"title\": \"Environmental Sustainability Solutions\",
            \"content\": \"Renewable energy sources like solar and wind power are crucial for combating climate change. Green technology innovations include electric vehicles, energy-efficient buildings, and carbon capture systems.\",
            \"content_semantic\": \"Renewable energy sources like solar and wind power are crucial for combating climate change. Green technology innovations include electric vehicles, energy-efficient buildings, and carbon capture systems.\",
            \"author\": \"Environmental Scientist\",
            \"created_date\": \"2025-07-02\",
            \"tags\": [\"environment\", \"renewable energy\", \"sustainability\", \"climate\"]
          }" || echo "Sample document 3 may already exist"
        
        curl -k -u elastic:${ELASTIC_PASSWORD} -X POST "https://elasticsearch:9200/semantic_documents/_doc/4" \
          -H "Content-Type: application/json" \
          -d "{
            \"title\": \"Remote Work and Digital Collaboration\",
            \"content\": \"The pandemic accelerated the adoption of remote work technologies. Video conferencing, cloud collaboration tools, and virtual reality meetings are changing how teams communicate and work together across distances.\",
            \"content_semantic\": \"The pandemic accelerated the adoption of remote work technologies. Video conferencing, cloud collaboration tools, and virtual reality meetings are changing how teams communicate and work together across distances.\",
            \"author\": \"Workplace Expert\",
            \"created_date\": \"2025-07-02\",
            \"tags\": [\"remote work\", \"collaboration\", \"technology\", \"communication\"]
          }" || echo "Sample document 4 may already exist"
        
        echo "E5 setup and sample data indexing completed!"
        
        echo "Testing semantic search..."
        curl -k -u elastic:${ELASTIC_PASSWORD} -X POST "https://elasticsearch:9200/semantic_documents/_search?pretty" \
          -H "Content-Type: application/json" \
          -d "{
            \"query\": {
              \"semantic\": {
                \"field\": \"content_semantic\",
                \"query\": \"medical diagnosis and treatment\"
              }
            },
            \"size\": 1
          }"
        
        echo "Setup verification completed!"
      '
    restart: "no"

  # FSCrawler
  fscrawler:
    image: dadoonet/fscrawler:${FSCRAWLER_VERSION}
    container_name: fscrawler
    restart: always
    environment:
      - FS_JAVA_OPTS=${FS_JAVA_OPTS}
    volumes:
      - ./elastic_documents:/tmp/es:ro
      - ${PWD}/config:/root/.fscrawler
      - ${PWD}/logs:/usr/share/fscrawler/logs
      - ${PWD}/external:/usr/share/fscrawler/external
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - ${FSCRAWLER_PORT}:8080
    command: idx --restart --rest

volumes:
  certs:
    driver: local
  esdata:
    driver: local
  kibanadata:
    driver: local
